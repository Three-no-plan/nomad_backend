type ContractInfo = record {
  token_amount : nat64;
  contract_id : text;
  ido_target_btc_amount : nat64;
  deploy_tx_hash : text;
  token_name : text;
  already_ido_btc_amount : nat64;
};
type DeployBrc20Args = record {
  token_amount : nat64;
  ido_target_btc_vol : nat64;
  deploy_tx_hash : text;
  token_name : text;
};
type MintBrc20Args = record {
  mint_psbt_tx_hex : text;
  contract_id : text;
  user_address : text;
  token_name : text;
};
type RefundArgs = record { tx_hex : text; token_name : opt text };
type Result = variant { Ok; Err : text };
type Result_1 = variant { Ok : text; Err : text };
service : {
  deploy_brc20_token : (DeployBrc20Args) -> (Result);
  get_contact_info : (text) -> (opt ContractInfo) query;
  get_contract_address : () -> (text) query;
  get_contract_map_entries : () -> (vec ContractInfo) query;
  get_ido_receive_vec : (text) -> (opt vec record { text; nat64 }) query;
  init : () -> ();
  mint_brc20_token : (MintBrc20Args) -> (Result_1);
  refund : (RefundArgs) -> (Result_1);
}
