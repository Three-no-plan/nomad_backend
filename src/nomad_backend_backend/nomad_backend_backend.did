type ContractInfo = record {
  token_amount : nat64;
  derivation_path : vec blob;
  ido_target_btc_amount : nat64;
  contract_address : text;
  deploy_tx_hash : text;
  token_name : text;
};
type DeployBrc20Args = record {
  token_amount : nat64;
  ido_target_btc_amount : nat64;
  contract_address : text;
  deploy_tx_hash : text;
  token_name : text;
};
type Result = variant { Ok : text; Err : text };
type Result_1 = variant { Ok; Err : text };
type Result_2 = variant { Ok : blob; Err : text };
service : () -> {
  create_contract : () -> (Result);
  deploy_brc20_token : (DeployBrc20Args) -> (Result_1);
  get_contact_info : (text) -> (opt ContractInfo) query;
  get_contract_map_entries : () -> (vec ContractInfo) query;
  get_ido_receive_vec : (text) -> (opt vec record { text; nat64 }) query;
  mint_brc20_token : (text, text, text) -> (Result);
  refund : (text, blob) -> (Result_2);
}
